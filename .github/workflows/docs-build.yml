name: "Build (& deploy) Docs"
on:
  push:
    branches: [main]
  pull_request: {}
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

defaults:
  run:
    shell: bash

jobs:
  docs-make:
    uses: Lightning-AI/utilities/.github/workflows/check-docs.yml@v0.11.0
    with:
      python-version: "3.10"
      requirements-file: "requirements/docs.txt"
      install-tex: true

  deploy-docs:
    needs: docs-make
    if: github.repository_owner == 'Lightning-AI' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      GCP_TARGET: "gs://lightning-docs-thunder"
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: docs-html-${{ github.sha }}
          path: docs/build/

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCS_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCS_PROJECT }}

      # Uploading docs to GCS, so they can be served on lightning.ai
      #- name: Upload docs/thunder/stable to GCS ðŸª£
      #  if: startsWith(github.ref, 'refs/heads/release/')
      #  run: gsutil -m rsync -d -R docs/build/html/ ${GCP_TARGET}/stable

      # Uploading docs to GCS, so they can be served on lightning.ai
      - name: Upload docs/thunder/latest to GCS ðŸª£
        if: github.ref == 'refs/heads/main'
        run: gsutil -m rsync -d -R docs/build/html/ ${GCP_TARGET}/latest

      # Uploading docs to GCS, so they can be served on lightning.ai
      #- name: Upload docs/thunder/release to GCS ðŸª£
      #  if: startsWith(github.ref, 'refs/tags/')
      #  run: gsutil -m rsync -d -R docs/build/html/ ${GCP_TARGET}/${{ github.ref_name }}

      # Uploading docs as archive to GCS, so they can be as backup
      #- name: Upload docs as archive to GCS ðŸª£
      #  if: startsWith(github.ref, 'refs/tags/')
      #  working-directory: docs/build
      #  run: |
      #    zip ${{ github.ref_name }}.zip -r html/
      #    gsutil cp ${{ github.ref_name }}.zip ${GCP_TARGET}
